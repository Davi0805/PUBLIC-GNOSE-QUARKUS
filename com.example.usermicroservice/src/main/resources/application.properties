# Postgres CONNECTION POOL
quarkus.datasource.jdbc.min-size=5
quarkus.datasource.jdbc.max-size=10
quarkus.datasource.jdbc.initial-size=5

# REDIS CONNECTION POOL
quarkus.redis.client.client-type=standalone
quarkus.redis.timeout=5s
quarkus.redis.max-pool-size=10

# Hibernate ORM configuration
quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.log.sql=false

# Fail fast on validation errors
quarkus.hibernate-validator.fail-fast=true

# Habilitar o Prometheus no Quarkus
quarkus.datasource.metrics.enabled=true

# HTTP Configuration
quarkus.http.host=0.0.0.0
quarkus.http.port=8080

# LOG CONFIG
#quarkus.log.level=INFO
quarkus.log.file.enable=true
quarkus.log.file.path=/var/log/application.log
quarkus.log.json.log-format=ecs
quarkus.log.json.additional-field.MicroService.value=USER-COMPANY
quarkus.log.json.fields.hostname.enabled=false
quarkus.log.json.fields.thread-name.enabled=false
quarkus.log.json.fields.thread-id.enabled=false
quarkus.log.json.fields.logger-name.enabled=false
quarkus.log.json.fields.mdc.flat-fields=true
quarkus.log.json.file.enable=true

# JWT Configuration
quarkus.smallrye-jwt.enabled=false
mp.jwt.verify.publickey.location=public_key.pem
smallrye.jwt.sign.key.location=private_key.pem
mp.jwt.verify.issuer=issuer
quarkus.smallrye-jwt.token=tokensecreto
smallrye.jwt.new-token.lifespan=3600

# CORS
quarkus.http.cors=true

#quarkus.http.cors.origins=*
// MODIFICAR ANTES DE PRODUCAO
quarkus.http.cors.origins=http://localhost:3000,https://gnose.tech

quarkus.http.cors.headers=Accept, Authorization, Content-Type, X-Custom-Header

quarkus.http.cors.methods=GET, POST, PUT, DELETE, OPTIONS

quarkus.http.cors.access-control-allow-credentials=true
